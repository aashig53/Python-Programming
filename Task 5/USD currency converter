import tkinter as tk
from tkinter import *
from tkinter import ttk
from datetime import datetime
import requests 
from PIL import ImageTk, Image
from tkinter import messagebox

root = tk.Tk()
root.geometry("600x270")
root.title("Currency Converter")
root.maxsize(600,270)
root.minsize(600,270)

image = Image.open("C:\\Users\\aashi\\Downloads\\49 (1).png")
zoom = 0.5

# multiple image size by zoom
pixels_x, pixels_y = tuple([int(zoom * x) for x in image.size])

img = ImageTk.PhotoImage(image.resize((pixels_x, pixels_y)))
panel = Label(root, image=img)
panel.place(x=190, y=35)

def show_data():
    amount = E1.get()
    from_currency = c1.get()
    to_currency = c2.get()
    url = 'https://api.exchangerate-api.com/v4/latest/USD'
    
    if amount == '':
        messagebox.showerror("Currency Converter", "Please Fill the Amount")
    elif to_currency == '':
        messagebox.showerror("Currency Converter", "Please Choose the Currency")
    else:
        try:
            data = requests.get(url).json()
            if 'rates' not in data:
                messagebox.showerror("Currency Converter", "Error retrieving exchange rates.")
                return
            
            currency = to_currency
            amount = float(amount)
            if currency not in data['rates']:
                messagebox.showerror("Currency Converter", f"No exchange rate data for {currency}.")
                return
            
            cc = data['rates'][currency]
            cur_conv = cc * amount
            E2.delete(0, 'end')
            E2.insert(0, cur_conv)
            
            text.insert('end', f'{amount} United State Dollar Equals {cur_conv:.2f} {to_currency} \n\nLast Updated --- \t {datetime.now()}')
        
        except Exception as e:
            messagebox.showerror("Currency Converter", f"Error: {str(e)}")

def clear():
    E1.delete(0, 'end')
    E2.delete(0, 'end')
    text.delete(1.0, 'end')

l1=Label (root, text="USD Currency Converter Using Python", font=('verdana', '10', 'bold')) 
l1.place(x=165,y=8)

amt = Label(root, text="Amount", font=('roboto', 10, 'bold'))
amt.place(x=20, y=15)
E1 = Entry(root, width=20, borderwidth=1, font=('roboto', 10, 'bold'))
E1.place(x=20, y=40)

c1 = tk.StringVar()
c2 = tk.StringVar()
currencychoose1 = ttk.Combobox(root, width=20, textvariable=c1, state='readonly', font=('verdana', 10, 'bold'))

# Adding combobox drop down List
currencychoose1['values'] = (
    'USD',
)
currencychoose1.place(x=300, y=40)
currencychoose1.current(0)

E2 = Entry(root, width=20, borderwidth=1, font=('roboto', 10, 'bold'))
E2.place(x=20, y=80)

currencychoose2 = ttk.Combobox(root, width=20, textvariable=c2, state='readonly', font=('verdana', '10', 'bold'))

# Adding combobox drop down List
currencychoose2['values'] = (
    'AED', 'AFN', 'ANG', 'ARS', 'AUD', 'AWG', 'AZN', 'BAM', 'BBD', 
    'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BRL', 'BSD', 'BTN', 
    'BWP', 'BYN', 'BZD', 'CAD', 'CDF', 'CHF', 'CLP', 'CNY', 'COP', 'CRC', 
    'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 
    'ETB', 'EUR', 'FJD', 'FKP', 'FOK', 'GBP', 'GEL', 'GGP', 'GHS', 'GIP', 
    'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 
    'ILS', 'IMP', 'INR', 'IQD', 'IRR', 'ISK', 'JEP', 'JMD', 'JOD', 'JPY', 
    'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 
    'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 
    'MNT', 'MOP', 'MRU', 'MUR', 'MVR', 'MWK', 'MXN', 'MYR', 'MZN', 'NAD', 
    'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 
    'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 
    'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STN', 
    'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 
    'TZS', 'UAH', 'UGX', 'USD', 'UYU', 'UZS', 'VES', 'VND', 'VUV', 'WST', 
    'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW', 'ZWD'
)


currencychoose2.place(x=300, y=80)
currencychoose2.current(0)

text = Text(root, height=7, width=52, font=('verdana', '10', 'bold'))
text.place(x=100, y=120)

B = Button(root, text="Search", command=show_data, font=('verdana', '10', 'bold'), borderwidth=2, bg="red", fg="white")
B.place(x=20, y=120)

clear_button = Button(root, text="Clear", command=clear, font=('verdana', '10', 'bold'), borderwidth=2, bg="blue", fg="white")
clear_button.place(x=20, y=170)

root.mainloop()
